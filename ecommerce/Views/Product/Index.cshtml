@model IEnumerable<Product>
@inject IHttpContextAccessor http;
@{
    ViewData["Title"] = "Product listings";
}

<h1>Product Catalog</h1>

<p>
    @TempData["Message"]
</p>


<a asp-action="Add">Add Product</a>

<div class="table-responsive">
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <th>Title</th>
                <th>Price</th>
                <th>Category</th>
            </tr>    
        </thead>
        <tbody>
            @{
                // mywebsite.com/Product/Index/5
                string previousUrl = http.HttpContext.Request.Path;
             }
            @foreach(Product p in Model)
            {
                <tr>
                    <td>@p.Title</td>
                    <td>@Html.DisplayFor(m => p.Price)</td>
                    <td>@p.category</td>                    <td>
                        <a class="btn btn-secondary" asp-route-id="@p.ProductId" asp-action="Edit">Edit</a>
                        <a class="btn btn-danger" asp-action="Delete" asp-route-id="@p.ProductId">Delete</a>
                        <a class="btn btn-primary" asp-route-id="@p.ProductId" asp-route-previousUrl="@previousUrl" asp-controller="Cart" asp-action="Add">Add to cart</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
@* Print page numbers<*@
<ul class="pagination">
    @for (int i = 1; i <= (int)ViewData["MaxPage"]; i++)
    {
        string classes = "page-item";
        if (i == (int)ViewData["CurrentPage"])
        {
            classes += " active";
        }
        
            <li class="@classes">
                <a class="page-link" asp-action="index" asp-route-id="@i">
                    @i
                </a>
            </li>
        
    }
</ul>
